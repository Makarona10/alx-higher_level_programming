The ``3-say_my_name`` Module
============================

Using the ``say_my_name`` function
==================================

Importing the ``say_my_name`` Module
    >>> say_my_name = __import__('3-say_my_name).say_my_name

Start the test.

::

Checks for the documentation of the module->

    >>>doc_size = __import__('3-say_my_name').__doc__
    >>>len(doc_size) > 5
    True
-----------------------------------------------------
::
Checks for the function documentation->

    >>>func_doc = say_my_name.__doc__
    >>>len(func_doc) > 5
    True

-----------------------------------------------------
::

Test if the first name is not a string->

    >>> say_my_name(1, "Makarona")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

    >>> say_my_name({"ID", 1544}, "Makarona")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
    
    >>> say_my_name([2, 3], "Makarona")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
    
    >>> say_my_name(True, "Makarona")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
    
    >>> say_my_name((1, 5), "Makarona")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
----------------------------------------------
::

Test if the last name is not a string->

    >>> say_my_name("Makarona", 1)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string
   
    >>> say_my_name("Makarona", {Name: peach})
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string
 
    >>> say_my_name("Makarona", 10.87)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string
  
    >>> say_my_name("Makarona", [1, 6, "Zamalek"])
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string
  
    >>> say_my_name("Makarona", False)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

------------------------------------------------
::

Test if the The full name is a string->

    >>> say_my_name("Thomas", "Shelby")
    My name is Thomas Shelby
   
    >>> say_my_name("Arthur", "Shelby")
    My name is Arthur Shelby

    >>> say_my_name('A', 'S')
    My name is A S

-------------------------------------------------
::

Test if Both names are not strings->
   
    >>> say_my_name((1, 3), True)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string


--------------------------------------------------
::

Test if the last name is void->

    >>> say_my_name("Morgan")
    My name is Morgan

--------------------------------------------------
::

Test if the first name is an empty string and the second name is None->

    >>> say_my_name("")
    My name is

--------------------------------------------------
::

Test if None is passed->

    >>> say_my_name(None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
  
    >>> say_my_name("Ahmed", None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

